// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vacanta.Data;

#nullable disable

namespace vacanta.Migrations
{
    [DbContext(typeof(vacantaContext))]
    partial class vacantaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("vacanta.Models.Continent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireContinent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Continent");
                });

            modelBuilder.Entity("vacanta.Models.Luna", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("Buget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ContinentID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPlecare")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrasID")
                        .HasColumnType("int");

                    b.Property<string>("Persoane")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suveniruri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaraID")
                        .HasColumnType("int");

                    b.Property<int?>("VizitatID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ContinentID");

                    b.HasIndex("OrasID");

                    b.HasIndex("TaraID");

                    b.HasIndex("VizitatID");

                    b.ToTable("Luna");
                });

            modelBuilder.Entity("vacanta.Models.Oras", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeOras")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Oras");
                });

            modelBuilder.Entity("vacanta.Models.Tara", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("TaraDorita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tara");
                });

            modelBuilder.Entity("vacanta.Models.Vizitat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AmVizitat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Vizitat");
                });

            modelBuilder.Entity("vacanta.Models.Luna", b =>
                {
                    b.HasOne("vacanta.Models.Continent", "Continent")
                        .WithMany("Luni")
                        .HasForeignKey("ContinentID");

                    b.HasOne("vacanta.Models.Oras", "Oras")
                        .WithMany("Luni")
                        .HasForeignKey("OrasID");

                    b.HasOne("vacanta.Models.Tara", "Tara")
                        .WithMany("Luni")
                        .HasForeignKey("TaraID");

                    b.HasOne("vacanta.Models.Vizitat", "Vizitat")
                        .WithMany("Luni")
                        .HasForeignKey("VizitatID");

                    b.Navigation("Continent");

                    b.Navigation("Oras");

                    b.Navigation("Tara");

                    b.Navigation("Vizitat");
                });

            modelBuilder.Entity("vacanta.Models.Continent", b =>
                {
                    b.Navigation("Luni");
                });

            modelBuilder.Entity("vacanta.Models.Oras", b =>
                {
                    b.Navigation("Luni");
                });

            modelBuilder.Entity("vacanta.Models.Tara", b =>
                {
                    b.Navigation("Luni");
                });

            modelBuilder.Entity("vacanta.Models.Vizitat", b =>
                {
                    b.Navigation("Luni");
                });
#pragma warning restore 612, 618
        }
    }
}
